// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motto.API.Infrastructure;

#nullable disable

namespace Motto.API.Infrastructure.Migrations
{
    [DbContext(typeof(MottoContext))]
    [Migration("20230110022539_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("motto_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("motto_language_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("motto_type_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Motto.API.Model.MottoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "motto_hilo");

                    b.Property<string>("Author")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("MottoLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("MottoTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MottoLanguageId");

                    b.HasIndex("MottoTypeId");

                    b.ToTable("Motto", (string)null);
                });

            modelBuilder.Entity("Motto.API.Model.MottoLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "motto_language_hilo");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MottoLanguage", (string)null);
                });

            modelBuilder.Entity("Motto.API.Model.MottoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "motto_type_hilo");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MottoType", (string)null);
                });

            modelBuilder.Entity("Motto.API.Model.MottoItem", b =>
                {
                    b.HasOne("Motto.API.Model.MottoLanguage", "MottoLanguage")
                        .WithMany()
                        .HasForeignKey("MottoLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motto.API.Model.MottoType", "MottoType")
                        .WithMany()
                        .HasForeignKey("MottoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MottoLanguage");

                    b.Navigation("MottoType");
                });
#pragma warning restore 612, 618
        }
    }
}
